// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package genqlient

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"

	"github.com/StevenACoffman/commentary/pkg/types"
)

// CreateNewPullRequestCommentAddCommentAddCommentPayload includes the requested fields of the GraphQL type AddCommentPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of AddComment
type CreateNewPullRequestCommentAddCommentAddCommentPayload struct {
	// The edge from the subject's comment connection.
	CommentEdge CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge `json:"commentEdge"`
}

// GetCommentEdge returns CreateNewPullRequestCommentAddCommentAddCommentPayload.CommentEdge, and is useful for accessing the field via an interface.
func (v *CreateNewPullRequestCommentAddCommentAddCommentPayload) GetCommentEdge() CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge {
	return v.CommentEdge
}

// CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge includes the requested fields of the GraphQL type IssueCommentEdge.
// The GraphQL type's documentation follows.
//
// An edge in a connection.
type CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge struct {
	// The item at the end of the edge.
	Node CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment `json:"node"`
}

// GetNode returns CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge.Node, and is useful for accessing the field via an interface.
func (v *CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdge) GetNode() CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment {
	return v.Node
}

// CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment includes the requested fields of the GraphQL type IssueComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Issue.
type CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment struct {
	Id string `json:"id"`
}

// GetId returns CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment.Id, and is useful for accessing the field via an interface.
func (v *CreateNewPullRequestCommentAddCommentAddCommentPayloadCommentEdgeIssueCommentEdgeNodeIssueComment) GetId() string {
	return v.Id
}

// CreateNewPullRequestCommentResponse is returned by CreateNewPullRequestComment on success.
type CreateNewPullRequestCommentResponse struct {
	// Adds a comment to an Issue or Pull Request.
	AddComment CreateNewPullRequestCommentAddCommentAddCommentPayload `json:"addComment"`
}

// GetAddComment returns CreateNewPullRequestCommentResponse.AddComment, and is useful for accessing the field via an interface.
func (v *CreateNewPullRequestCommentResponse) GetAddComment() CreateNewPullRequestCommentAddCommentAddCommentPayload {
	return v.AddComment
}

// GetCommentsForPullRequestResourceBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type GetCommentsForPullRequestResourceBot struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceBot.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceBot) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceCheckRun includes the requested fields of the GraphQL type CheckRun.
// The GraphQL type's documentation follows.
//
// A check run.
type GetCommentsForPullRequestResourceCheckRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceCheckRun.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceCheckRun) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceClosedEvent includes the requested fields of the GraphQL type ClosedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'closed' event on any `Closable`.
type GetCommentsForPullRequestResourceClosedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceClosedEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceClosedEvent) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceCommit includes the requested fields of the GraphQL type Commit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit.
type GetCommentsForPullRequestResourceCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceCommit.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceCommit) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceConvertToDraftEvent includes the requested fields of the GraphQL type ConvertToDraftEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'convert_to_draft' event on a given pull request.
type GetCommentsForPullRequestResourceConvertToDraftEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceConvertToDraftEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceConvertToDraftEvent) GetTypename() string {
	return v.Typename
}

// GetCommentsForPullRequestResourceCrossReferencedEvent includes the requested fields of the GraphQL type CrossReferencedEvent.
// The GraphQL type's documentation follows.
//
// Represents a mention made by one issue or pull request to another.
type GetCommentsForPullRequestResourceCrossReferencedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceCrossReferencedEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceCrossReferencedEvent) GetTypename() string {
	return v.Typename
}

// GetCommentsForPullRequestResourceGist includes the requested fields of the GraphQL type Gist.
// The GraphQL type's documentation follows.
//
// A Gist.
type GetCommentsForPullRequestResourceGist struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceGist.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceGist) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceIssue includes the requested fields of the GraphQL type Issue.
// The GraphQL type's documentation follows.
//
// An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.
type GetCommentsForPullRequestResourceIssue struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceIssue.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceIssue) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type GetCommentsForPullRequestResourceMannequin struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceMannequin.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceMannequin) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceMergedEvent includes the requested fields of the GraphQL type MergedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'merged' event on a given pull request.
type GetCommentsForPullRequestResourceMergedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceMergedEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceMergedEvent) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceMilestone includes the requested fields of the GraphQL type Milestone.
// The GraphQL type's documentation follows.
//
// Represents a Milestone object on a given repository.
type GetCommentsForPullRequestResourceMilestone struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceMilestone.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceMilestone) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type GetCommentsForPullRequestResourceOrganization struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceOrganization.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceOrganization) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourcePullRequest includes the requested fields of the GraphQL type PullRequest.
// The GraphQL type's documentation follows.
//
// A repository pull request.
type GetCommentsForPullRequestResourcePullRequest struct {
	Typename string `json:"__typename"`
	// A list of comments associated with the pull request.
	Comments GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection `json:"comments"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequest.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequest) GetTypename() string { return v.Typename }

// GetComments returns GetCommentsForPullRequestResourcePullRequest.Comments, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequest) GetComments() GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection {
	return v.Comments
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection includes the requested fields of the GraphQL type IssueCommentConnection.
// The GraphQL type's documentation follows.
//
// The connection type for IssueComment.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection struct {
	// A list of nodes.
	Nodes []GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment `json:"nodes"`
	// Information to aid in pagination.
	PageInfo GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo `json:"pageInfo"`
}

// GetNodes returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection.Nodes, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection) GetNodes() []GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment {
	return v.Nodes
}

// GetPageInfo returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnection) GetPageInfo() GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo {
	return v.PageInfo
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment includes the requested fields of the GraphQL type IssueComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Issue.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment struct {
	Id string `json:"id"`
	// The HTTP URL for this issue comment
	Url string `json:"url"`
	// The actor who authored the comment.
	Author GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor `json:"-"`
	// The body as Markdown.
	Body string `json:"body"`
}

// GetId returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Id, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) GetId() string {
	return v.Id
}

// GetUrl returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Url, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) GetUrl() string {
	return v.Url
}

// GetAuthor returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Author, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) GetAuthor() GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor {
	return v.Author
}

// GetBody returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Body, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) GetBody() string {
	return v.Body
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) UnmarshalJSON(b []byte) error {
	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment
		Author json.RawMessage `json:"author"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Author
		src := firstPass.Author
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Author: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment struct {
	Id string `json:"id"`

	Url string `json:"url"`

	Author json.RawMessage `json:"author"`

	Body string `json:"body"`
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment) __premarshalJSON() (*__premarshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment, error) {
	var retval __premarshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment

	retval.Id = v.Id
	retval.Url = v.Url
	{

		dst := &retval.Author
		src := v.Author
		var err error
		*dst, err = __marshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueComment.Author: %w", err)
		}
	}
	retval.Body = v.Body
	return &retval, nil
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor includes the requested fields of the GraphQL interface Actor.
//
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor is implemented by the following types:
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization
// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser
// The GraphQL type's documentation follows.
//
// Represents an object which can take actions on GitHub. Typically a User or Bot.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor interface {
	implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetLogin returns the interface-field "login" from its implementation.
	// The GraphQL interface field's documentation follows.
	//
	// The username of the actor.
	GetLogin() string
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot) implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor() {
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount) implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor() {
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin) implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor() {
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization) implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor() {
}

func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser) implementsGraphQLInterfaceGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor() {
}

func __unmarshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor(b []byte, v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Bot":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot)
		return json.Unmarshal(b, *v)
	case "EnterpriseUserAccount":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Actor.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor: "%v"`, tn.TypeName)
	}
}

func __marshalGetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor(v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor) ([]byte, error) {
	var typename string
	switch v := (*v).(type) {
	case *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount:
		typename = "EnterpriseUserAccount"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorActor: "%T"`, v)
	}
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot includes the requested fields of the GraphQL type Bot.
// The GraphQL type's documentation follows.
//
// A special type of user which takes actions on behalf of GitHub Apps.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot) GetTypename() string {
	return v.Typename
}

// GetLogin returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot.Login, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorBot) GetLogin() string {
	return v.Login
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount includes the requested fields of the GraphQL type EnterpriseUserAccount.
// The GraphQL type's documentation follows.
//
// An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount) GetTypename() string {
	return v.Typename
}

// GetLogin returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount.Login, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorEnterpriseUserAccount) GetLogin() string {
	return v.Login
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin includes the requested fields of the GraphQL type Mannequin.
// The GraphQL type's documentation follows.
//
// A placeholder user for attribution of imported data on GitHub.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin) GetTypename() string {
	return v.Typename
}

// GetLogin returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin.Login, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorMannequin) GetLogin() string {
	return v.Login
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization includes the requested fields of the GraphQL type Organization.
// The GraphQL type's documentation follows.
//
// An account on GitHub, with one or more owners, that has repositories, members and teams.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization) GetTypename() string {
	return v.Typename
}

// GetLogin returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization.Login, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorOrganization) GetLogin() string {
	return v.Login
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser struct {
	Typename string `json:"__typename"`
	// The username of the actor.
	Login string `json:"login"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser) GetTypename() string {
	return v.Typename
}

// GetLogin returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser.Login, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionNodesIssueCommentAuthorUser) GetLogin() string {
	return v.Login
}

// GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo includes the requested fields of the GraphQL type PageInfo.
// The GraphQL type's documentation follows.
//
// Information about pagination in a connection.
type GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo struct {
	// When paginating forwards, are there more items?
	HasNextPage bool `json:"hasNextPage"`
}

// GetHasNextPage returns GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommentsIssueCommentConnectionPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetCommentsForPullRequestResourcePullRequestCommit includes the requested fields of the GraphQL type PullRequestCommit.
// The GraphQL type's documentation follows.
//
// Represents a Git commit part of a pull request.
type GetCommentsForPullRequestResourcePullRequestCommit struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourcePullRequestCommit.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourcePullRequestCommit) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceReadyForReviewEvent includes the requested fields of the GraphQL type ReadyForReviewEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'ready_for_review' event on a given pull request.
type GetCommentsForPullRequestResourceReadyForReviewEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceReadyForReviewEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceReadyForReviewEvent) GetTypename() string {
	return v.Typename
}

// GetCommentsForPullRequestResourceRelease includes the requested fields of the GraphQL type Release.
// The GraphQL type's documentation follows.
//
// A release contains the content for a release.
type GetCommentsForPullRequestResourceRelease struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceRelease.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceRelease) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetCommentsForPullRequestResourceRepository struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceRepository.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceRepository) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceRepositoryTopic includes the requested fields of the GraphQL type RepositoryTopic.
// The GraphQL type's documentation follows.
//
// A repository-topic connects a repository to a topic.
type GetCommentsForPullRequestResourceRepositoryTopic struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceRepositoryTopic.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceRepositoryTopic) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceReviewDismissedEvent includes the requested fields of the GraphQL type ReviewDismissedEvent.
// The GraphQL type's documentation follows.
//
// Represents a 'review_dismissed' event on a given issue or pull request.
type GetCommentsForPullRequestResourceReviewDismissedEvent struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceReviewDismissedEvent.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceReviewDismissedEvent) GetTypename() string {
	return v.Typename
}

// GetCommentsForPullRequestResourceTeamDiscussion includes the requested fields of the GraphQL type TeamDiscussion.
// The GraphQL type's documentation follows.
//
// A team discussion.
type GetCommentsForPullRequestResourceTeamDiscussion struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceTeamDiscussion.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceTeamDiscussion) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResourceTeamDiscussionComment includes the requested fields of the GraphQL type TeamDiscussionComment.
// The GraphQL type's documentation follows.
//
// A comment on a team discussion.
type GetCommentsForPullRequestResourceTeamDiscussionComment struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceTeamDiscussionComment.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceTeamDiscussionComment) GetTypename() string {
	return v.Typename
}

// GetCommentsForPullRequestResourceUniformResourceLocatable includes the requested fields of the GraphQL interface UniformResourceLocatable.
//
// GetCommentsForPullRequestResourceUniformResourceLocatable is implemented by the following types:
// GetCommentsForPullRequestResourceBot
// GetCommentsForPullRequestResourceCheckRun
// GetCommentsForPullRequestResourceClosedEvent
// GetCommentsForPullRequestResourceCommit
// GetCommentsForPullRequestResourceConvertToDraftEvent
// GetCommentsForPullRequestResourceCrossReferencedEvent
// GetCommentsForPullRequestResourceGist
// GetCommentsForPullRequestResourceIssue
// GetCommentsForPullRequestResourceMannequin
// GetCommentsForPullRequestResourceMergedEvent
// GetCommentsForPullRequestResourceMilestone
// GetCommentsForPullRequestResourceOrganization
// GetCommentsForPullRequestResourcePullRequest
// GetCommentsForPullRequestResourcePullRequestCommit
// GetCommentsForPullRequestResourceReadyForReviewEvent
// GetCommentsForPullRequestResourceRelease
// GetCommentsForPullRequestResourceRepository
// GetCommentsForPullRequestResourceRepositoryTopic
// GetCommentsForPullRequestResourceReviewDismissedEvent
// GetCommentsForPullRequestResourceTeamDiscussion
// GetCommentsForPullRequestResourceTeamDiscussionComment
// GetCommentsForPullRequestResourceUser
// The GraphQL type's documentation follows.
//
// Represents a type that can be retrieved by a URL.
type GetCommentsForPullRequestResourceUniformResourceLocatable interface {
	implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetCommentsForPullRequestResourceBot) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceCheckRun) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceClosedEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceCommit) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceConvertToDraftEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceCrossReferencedEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceGist) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceIssue) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceMannequin) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceMergedEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceMilestone) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceOrganization) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourcePullRequest) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourcePullRequestCommit) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceReadyForReviewEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceRelease) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceRepository) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceRepositoryTopic) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceReviewDismissedEvent) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceTeamDiscussion) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceTeamDiscussionComment) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func (v *GetCommentsForPullRequestResourceUser) implementsGraphQLInterfaceGetCommentsForPullRequestResourceUniformResourceLocatable() {
}

func __unmarshalGetCommentsForPullRequestResourceUniformResourceLocatable(b []byte, v *GetCommentsForPullRequestResourceUniformResourceLocatable) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Bot":
		*v = new(GetCommentsForPullRequestResourceBot)
		return json.Unmarshal(b, *v)
	case "CheckRun":
		*v = new(GetCommentsForPullRequestResourceCheckRun)
		return json.Unmarshal(b, *v)
	case "ClosedEvent":
		*v = new(GetCommentsForPullRequestResourceClosedEvent)
		return json.Unmarshal(b, *v)
	case "Commit":
		*v = new(GetCommentsForPullRequestResourceCommit)
		return json.Unmarshal(b, *v)
	case "ConvertToDraftEvent":
		*v = new(GetCommentsForPullRequestResourceConvertToDraftEvent)
		return json.Unmarshal(b, *v)
	case "CrossReferencedEvent":
		*v = new(GetCommentsForPullRequestResourceCrossReferencedEvent)
		return json.Unmarshal(b, *v)
	case "Gist":
		*v = new(GetCommentsForPullRequestResourceGist)
		return json.Unmarshal(b, *v)
	case "Issue":
		*v = new(GetCommentsForPullRequestResourceIssue)
		return json.Unmarshal(b, *v)
	case "Mannequin":
		*v = new(GetCommentsForPullRequestResourceMannequin)
		return json.Unmarshal(b, *v)
	case "MergedEvent":
		*v = new(GetCommentsForPullRequestResourceMergedEvent)
		return json.Unmarshal(b, *v)
	case "Milestone":
		*v = new(GetCommentsForPullRequestResourceMilestone)
		return json.Unmarshal(b, *v)
	case "Organization":
		*v = new(GetCommentsForPullRequestResourceOrganization)
		return json.Unmarshal(b, *v)
	case "PullRequest":
		*v = new(GetCommentsForPullRequestResourcePullRequest)
		return json.Unmarshal(b, *v)
	case "PullRequestCommit":
		*v = new(GetCommentsForPullRequestResourcePullRequestCommit)
		return json.Unmarshal(b, *v)
	case "ReadyForReviewEvent":
		*v = new(GetCommentsForPullRequestResourceReadyForReviewEvent)
		return json.Unmarshal(b, *v)
	case "Release":
		*v = new(GetCommentsForPullRequestResourceRelease)
		return json.Unmarshal(b, *v)
	case "Repository":
		*v = new(GetCommentsForPullRequestResourceRepository)
		return json.Unmarshal(b, *v)
	case "RepositoryTopic":
		*v = new(GetCommentsForPullRequestResourceRepositoryTopic)
		return json.Unmarshal(b, *v)
	case "ReviewDismissedEvent":
		*v = new(GetCommentsForPullRequestResourceReviewDismissedEvent)
		return json.Unmarshal(b, *v)
	case "TeamDiscussion":
		*v = new(GetCommentsForPullRequestResourceTeamDiscussion)
		return json.Unmarshal(b, *v)
	case "TeamDiscussionComment":
		*v = new(GetCommentsForPullRequestResourceTeamDiscussionComment)
		return json.Unmarshal(b, *v)
	case "User":
		*v = new(GetCommentsForPullRequestResourceUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UniformResourceLocatable.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetCommentsForPullRequestResourceUniformResourceLocatable: "%v"`, tn.TypeName)
	}
}

func __marshalGetCommentsForPullRequestResourceUniformResourceLocatable(v *GetCommentsForPullRequestResourceUniformResourceLocatable) ([]byte, error) {
	var typename string
	switch v := (*v).(type) {
	case *GetCommentsForPullRequestResourceBot:
		typename = "Bot"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceBot
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceCheckRun:
		typename = "CheckRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceCheckRun
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceClosedEvent:
		typename = "ClosedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceClosedEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceCommit:
		typename = "Commit"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceCommit
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceConvertToDraftEvent:
		typename = "ConvertToDraftEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceConvertToDraftEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceCrossReferencedEvent:
		typename = "CrossReferencedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceCrossReferencedEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceGist:
		typename = "Gist"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceGist
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceIssue:
		typename = "Issue"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceIssue
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceMannequin:
		typename = "Mannequin"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceMannequin
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceMergedEvent:
		typename = "MergedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceMergedEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceMilestone:
		typename = "Milestone"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceMilestone
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceOrganization:
		typename = "Organization"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceOrganization
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequest:
		typename = "PullRequest"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequest
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourcePullRequestCommit:
		typename = "PullRequestCommit"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourcePullRequestCommit
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceReadyForReviewEvent:
		typename = "ReadyForReviewEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceReadyForReviewEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceRelease:
		typename = "Release"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceRelease
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceRepository:
		typename = "Repository"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceRepository
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceRepositoryTopic:
		typename = "RepositoryTopic"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceRepositoryTopic
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceReviewDismissedEvent:
		typename = "ReviewDismissedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceReviewDismissedEvent
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceTeamDiscussion:
		typename = "TeamDiscussion"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceTeamDiscussion
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceTeamDiscussionComment:
		typename = "TeamDiscussionComment"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceTeamDiscussionComment
		}{typename, v}
		return json.Marshal(result)
	case *GetCommentsForPullRequestResourceUser:
		typename = "User"

		result := struct {
			TypeName string `json:"__typename"`
			*GetCommentsForPullRequestResourceUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetCommentsForPullRequestResourceUniformResourceLocatable: "%T"`, v)
	}
}

// GetCommentsForPullRequestResourceUser includes the requested fields of the GraphQL type User.
// The GraphQL type's documentation follows.
//
// A user is an individual's account on GitHub that owns repositories and can make new content.
type GetCommentsForPullRequestResourceUser struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetCommentsForPullRequestResourceUser.Typename, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResourceUser) GetTypename() string { return v.Typename }

// GetCommentsForPullRequestResponse is returned by GetCommentsForPullRequest on success.
type GetCommentsForPullRequestResponse struct {
	// Lookup resource by a URL.
	Resource GetCommentsForPullRequestResourceUniformResourceLocatable `json:"-"`
}

// GetResource returns GetCommentsForPullRequestResponse.Resource, and is useful for accessing the field via an interface.
func (v *GetCommentsForPullRequestResponse) GetResource() GetCommentsForPullRequestResourceUniformResourceLocatable {
	return v.Resource
}

func (v *GetCommentsForPullRequestResponse) UnmarshalJSON(b []byte) error {
	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetCommentsForPullRequestResponse
		Resource json.RawMessage `json:"resource"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetCommentsForPullRequestResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Resource
		src := firstPass.Resource
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetCommentsForPullRequestResourceUniformResourceLocatable(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"Unable to unmarshal GetCommentsForPullRequestResponse.Resource: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetCommentsForPullRequestResponse struct {
	Resource json.RawMessage `json:"resource"`
}

func (v *GetCommentsForPullRequestResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetCommentsForPullRequestResponse) __premarshalJSON() (*__premarshalGetCommentsForPullRequestResponse, error) {
	var retval __premarshalGetCommentsForPullRequestResponse

	{

		dst := &retval.Resource
		src := v.Resource
		var err error
		*dst, err = __marshalGetCommentsForPullRequestResourceUniformResourceLocatable(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"Unable to marshal GetCommentsForPullRequestResponse.Resource: %w", err)
		}
	}
	return &retval, nil
}

// GetPullRequestAndCommentsForCommitRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetPullRequestAndCommentsForCommitRepository struct {
	// A Git object in the repository
	Commit types.GitObject `json:"commit"`
}

// GetCommit returns GetPullRequestAndCommentsForCommitRepository.Commit, and is useful for accessing the field via an interface.
func (v *GetPullRequestAndCommentsForCommitRepository) GetCommit() types.GitObject { return v.Commit }

// GetPullRequestAndCommentsForCommitResponse is returned by GetPullRequestAndCommentsForCommit on success.
type GetPullRequestAndCommentsForCommitResponse struct {
	// Lookup a given repository by the owner and repository name.
	Repository GetPullRequestAndCommentsForCommitRepository `json:"repository"`
}

// GetRepository returns GetPullRequestAndCommentsForCommitResponse.Repository, and is useful for accessing the field via an interface.
func (v *GetPullRequestAndCommentsForCommitResponse) GetRepository() GetPullRequestAndCommentsForCommitRepository {
	return v.Repository
}

// GetPullRequestForCommitRepository includes the requested fields of the GraphQL type Repository.
// The GraphQL type's documentation follows.
//
// A repository contains the content for a project.
type GetPullRequestForCommitRepository struct {
	// A Git object in the repository
	Commit types.GitObject `json:"commit"`
}

// GetCommit returns GetPullRequestForCommitRepository.Commit, and is useful for accessing the field via an interface.
func (v *GetPullRequestForCommitRepository) GetCommit() types.GitObject { return v.Commit }

// GetPullRequestForCommitResponse is returned by GetPullRequestForCommit on success.
type GetPullRequestForCommitResponse struct {
	// Lookup a given repository by the owner and repository name.
	Repository GetPullRequestForCommitRepository `json:"repository"`
}

// GetRepository returns GetPullRequestForCommitResponse.Repository, and is useful for accessing the field via an interface.
func (v *GetPullRequestForCommitResponse) GetRepository() GetPullRequestForCommitRepository {
	return v.Repository
}

// UpdatePullRequestCommentResponse is returned by UpdatePullRequestComment on success.
type UpdatePullRequestCommentResponse struct {
	// Updates an IssueComment object.
	UpdateIssueComment UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload `json:"updateIssueComment"`
}

// GetUpdateIssueComment returns UpdatePullRequestCommentResponse.UpdateIssueComment, and is useful for accessing the field via an interface.
func (v *UpdatePullRequestCommentResponse) GetUpdateIssueComment() UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload {
	return v.UpdateIssueComment
}

// UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload includes the requested fields of the GraphQL type UpdateIssueCommentPayload.
// The GraphQL type's documentation follows.
//
// Autogenerated return type of UpdateIssueComment
type UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload struct {
	// The updated comment.
	IssueComment UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment `json:"issueComment"`
}

// GetIssueComment returns UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload.IssueComment, and is useful for accessing the field via an interface.
func (v *UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayload) GetIssueComment() UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment {
	return v.IssueComment
}

// UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment includes the requested fields of the GraphQL type IssueComment.
// The GraphQL type's documentation follows.
//
// Represents a comment on an Issue.
type UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment struct {
	Id string `json:"id"`
}

// GetId returns UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment.Id, and is useful for accessing the field via an interface.
func (v *UpdatePullRequestCommentUpdateIssueCommentUpdateIssueCommentPayloadIssueComment) GetId() string {
	return v.Id
}

// __CreateNewPullRequestCommentInput is used internally by genqlient
type __CreateNewPullRequestCommentInput struct {
	PrId string `json:"prId"`
	Body string `json:"body"`
}

// GetPrId returns __CreateNewPullRequestCommentInput.PrId, and is useful for accessing the field via an interface.
func (v *__CreateNewPullRequestCommentInput) GetPrId() string { return v.PrId }

// GetBody returns __CreateNewPullRequestCommentInput.Body, and is useful for accessing the field via an interface.
func (v *__CreateNewPullRequestCommentInput) GetBody() string { return v.Body }

// __GetCommentsForPullRequestInput is used internally by genqlient
type __GetCommentsForPullRequestInput struct {
	Url string `json:"url"`
}

// GetUrl returns __GetCommentsForPullRequestInput.Url, and is useful for accessing the field via an interface.
func (v *__GetCommentsForPullRequestInput) GetUrl() string { return v.Url }

// __GetPullRequestAndCommentsForCommitInput is used internally by genqlient
type __GetPullRequestAndCommentsForCommitInput struct {
	Owner string `json:"owner"`
	Repo  string `json:"repo"`
	Sha   string `json:"sha"`
}

// GetOwner returns __GetPullRequestAndCommentsForCommitInput.Owner, and is useful for accessing the field via an interface.
func (v *__GetPullRequestAndCommentsForCommitInput) GetOwner() string { return v.Owner }

// GetRepo returns __GetPullRequestAndCommentsForCommitInput.Repo, and is useful for accessing the field via an interface.
func (v *__GetPullRequestAndCommentsForCommitInput) GetRepo() string { return v.Repo }

// GetSha returns __GetPullRequestAndCommentsForCommitInput.Sha, and is useful for accessing the field via an interface.
func (v *__GetPullRequestAndCommentsForCommitInput) GetSha() string { return v.Sha }

// __GetPullRequestForCommitInput is used internally by genqlient
type __GetPullRequestForCommitInput struct {
	Owner string `json:"owner"`
	Repo  string `json:"repo"`
	Sha   string `json:"sha"`
}

// GetOwner returns __GetPullRequestForCommitInput.Owner, and is useful for accessing the field via an interface.
func (v *__GetPullRequestForCommitInput) GetOwner() string { return v.Owner }

// GetRepo returns __GetPullRequestForCommitInput.Repo, and is useful for accessing the field via an interface.
func (v *__GetPullRequestForCommitInput) GetRepo() string { return v.Repo }

// GetSha returns __GetPullRequestForCommitInput.Sha, and is useful for accessing the field via an interface.
func (v *__GetPullRequestForCommitInput) GetSha() string { return v.Sha }

// __UpdatePullRequestCommentInput is used internally by genqlient
type __UpdatePullRequestCommentInput struct {
	CommentId string `json:"commentId"`
	Body      string `json:"body"`
}

// GetCommentId returns __UpdatePullRequestCommentInput.CommentId, and is useful for accessing the field via an interface.
func (v *__UpdatePullRequestCommentInput) GetCommentId() string { return v.CommentId }

// GetBody returns __UpdatePullRequestCommentInput.Body, and is useful for accessing the field via an interface.
func (v *__UpdatePullRequestCommentInput) GetBody() string { return v.Body }

func CreateNewPullRequestComment(
	ctx context.Context,
	client graphql.Client,
	prId string,
	body string,
) (*CreateNewPullRequestCommentResponse, error) {
	__input := __CreateNewPullRequestCommentInput{
		PrId: prId,
		Body: body,
	}
	var err error

	var retval CreateNewPullRequestCommentResponse
	err = client.MakeRequest(
		ctx,
		"CreateNewPullRequestComment",
		`
mutation CreateNewPullRequestComment ($prId: ID!, $body: String!) {
	addComment(input: {subjectId:$prId,body:$body}) {
		commentEdge {
			node {
				id
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetCommentsForPullRequest(
	ctx context.Context,
	client graphql.Client,
	url string,
) (*GetCommentsForPullRequestResponse, error) {
	__input := __GetCommentsForPullRequestInput{
		Url: url,
	}
	var err error

	var retval GetCommentsForPullRequestResponse
	err = client.MakeRequest(
		ctx,
		"GetCommentsForPullRequest",
		`
query GetCommentsForPullRequest ($url: URI!) {
	resource(url: $url) {
		__typename
		... on PullRequest {
			comments(first: 100) {
				nodes {
					id
					url
					author {
						__typename
						login
					}
					body
				}
				pageInfo {
					hasNextPage
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetPullRequestAndCommentsForCommit(
	ctx context.Context,
	client graphql.Client,
	owner string,
	repo string,
	sha string,
) (*GetPullRequestAndCommentsForCommitResponse, error) {
	__input := __GetPullRequestAndCommentsForCommitInput{
		Owner: owner,
		Repo:  repo,
		Sha:   sha,
	}
	var err error

	var retval GetPullRequestAndCommentsForCommitResponse
	err = client.MakeRequest(
		ctx,
		"GetPullRequestAndCommentsForCommit",
		`
query GetPullRequestAndCommentsForCommit ($owner: String!, $repo: String!, $sha: String) {
	repository(name: $repo, owner: $owner) {
		commit: object(expression: $sha) {
			__typename
			... on Commit {
				associatedPullRequests(first: 1) {
					nodes {
						number
						... on PullRequest {
							id
							comments(first: 100) {
								nodes {
									id
									url
									author {
										__typename
										login
									}
									body
								}
								pageInfo {
									hasNextPage
								}
							}
						}
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func GetPullRequestForCommit(
	ctx context.Context,
	client graphql.Client,
	owner string,
	repo string,
	sha string,
) (*GetPullRequestForCommitResponse, error) {
	__input := __GetPullRequestForCommitInput{
		Owner: owner,
		Repo:  repo,
		Sha:   sha,
	}
	var err error

	var retval GetPullRequestForCommitResponse
	err = client.MakeRequest(
		ctx,
		"GetPullRequestForCommit",
		`
query GetPullRequestForCommit ($owner: String!, $repo: String!, $sha: String) {
	repository(name: $repo, owner: $owner) {
		commit: object(expression: $sha) {
			__typename
			... on Commit {
				associatedPullRequests(first: 1) {
					nodes {
						number
					}
				}
			}
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}

func UpdatePullRequestComment(
	ctx context.Context,
	client graphql.Client,
	commentId string,
	body string,
) (*UpdatePullRequestCommentResponse, error) {
	__input := __UpdatePullRequestCommentInput{
		CommentId: commentId,
		Body:      body,
	}
	var err error

	var retval UpdatePullRequestCommentResponse
	err = client.MakeRequest(
		ctx,
		"UpdatePullRequestComment",
		`
mutation UpdatePullRequestComment ($commentId: ID!, $body: String!) {
	updateIssueComment(input: {id:$commentId,body:$body}) {
		issueComment {
			id
		}
	}
}
`,
		&retval,
		&__input,
	)
	return &retval, err
}
